#' @title A Metropolis-Hastings sampler using
#' @description Use the Metropolis-Hastings sampler to generate random variables from a a standard Cauchy distribution. Discard the first 1000 of the chain, and compare the deciles of the generated observations with the deciles of the standard Cauchy distribution
#' @param f for the supposed distribution
#' @param m the number of between-sample random numbers
#' @return a random sample of size \code{n}
#' @examples
#' \dontrun{
#'    f <- function(x, theta,eta)
#'      {
#'          if (theta > 0)
#'          return(1/(theta*pi*(1+((x-eta)/theta)^2)))
#'      }

#'    theta <- 1;eta <- 0
#'    x <- numeric(m)
#'    m<- 1e3
#'    MH_using(f,m)
#' }
#' @export
MH_using <- function(f,m){
library(stats)
x[1] <- runif(1,min=-1,max=1)
k <- 0
u <- runif(m)
for (i in 2:m) {
  xt <- x[i-1]
  y <- xt+runif(1,min=-1,max=1) #proposal distribution
  num <- f(y, theta,eta) * dnorm(xt, mean = y,sd=0.5)

  den <- f(xt, theta,eta) * dnorm(y, mean = xt,sd=0.5)

  if (u[i] <= num/den) x[i] <- y
  else {
    x[i] <- xt
    k <- k+1 #y is rejected
  }
}
print(k)

#Compare the deciles of the generated observations with the deciles of the standard Cauchy distribution

b <- 1001 #discard the burnin sample
y <- x[b:m]
a <- ppoints(100)
QC <- qcauchy(a) #quantiles of Cauchy
Q <- quantile(x, a)
qqplot(QC, Q, main="",xlim=c(-2,2),ylim=c(-2,2),xlab="Cauchy Quantiles", ylab="Sample Quantiles")
hist(y, breaks="scott", main="", xlab="", freq=FALSE)
lines(QC, f(QC,theta,eta))
}
NULL

